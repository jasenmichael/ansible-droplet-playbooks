- name: Provision Docker Droplet with Docker Compose
  hosts: localhost
  connection: local
  become: yes
  tasks:
    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker and dependencies
      apt:
        pkg:
        - ca-certificates 
        - curl 
        - gnupg 
        - lsb-release
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
        state: present
        # name: docker.io
            
    # - name: Install Docker Compose
    #   apt:
    #     name: docker-compose
    #     state: present

    - name: Install pip for Python 3
      apt:
        name: python3-pip
        state: present

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    # - name: Install Docker Compose
    #   pip:
    #     name: docker-compose
    #     state: present

    # - name: Install pip cryptography for Python
    #   pip:
    #     name: cryptography
    #     state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Clone/Pull repository to APP_PATH
      git:
        repo: "https://github.com/{{ GITHUB_REPOSITORY }}"
        dest: "{{ APP_PATH }}"
        version: "{{ GITHUB_REPOSITORY_BRANCH | default('main') }}"
        update: yes
        force: no

    - name: Set permissions for www user
      file:
        path: /home/www/app
        owner: www
        group: www
        mode: "u=rwx,g=rx,o=rx"

    - name: Run Docker Compose up
      command: docker compose -f "{{ DOCKER_COMPOSE_PATH | default(APP_PATH + '/docker-compose.yml') }}" up -d

